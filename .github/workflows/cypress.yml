name: Cypress Tests
on: [push]
jobs:
  cypress-run:
    runs-on: ubuntu-latest
    steps:
      # - name: Setup Git Submodule
      #   uses: actions/checkout@v4
      #   with:
      #     submodules: 'recursive'
      #     ssh-key: ${{secrets.SSH_KEY_FOR_SUBMODULE}}

      # - uses: actions/checkout@v3
      # - name: Setup Submoduel
      #   env:
      #     SSH_KEY_FOR_SUBMODULE: ${{secrets.SSH_KEY_FOR_SUBMODULE}}
      #   run: |
      #     mkdir $HOME/.ssh && echo "$SSH_KEY_FOR_SUBMODULE" > $HOME/.ssh/id_rsa && chmod 600 $HOME/.ssh/id_rsa && git submodule update --init --recursive
          
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4 
        with:
          node-version: 16
      - run: yarn
      - run: yarn dev
      # - name: Cypress run
      #   # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
      #   uses: cypress-io/github-action@v6
      #   with:
      #     # Starts web server for E2E tests - replace with your own server invocation
      #     # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
      #     start: npm run cy:run
      #     wait-on: 'https://admin.urskio.com/' # Waits for above
      #     working-directory: cypress-e2e-v2
      #     # Records to Cypress Cloud 
      #     # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
      #     record: true
      #     parallel: true # Runs test in parallel using settings above
      #   env:
      #     BACKSTAGE_ACCOUNT: ${{ secrets.BACKSTAGE_ACCOUNT }}
      #     BACKSTAGE_PASSWORD: ${{ secrets.BACKSTAGE_PASSWORD }}
      #     API_BASE_URL: ${{ secrets.API_BASE_URL }}
      #     # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
      #     # in GitHub repo → Settings → Secrets → Actions
      #     CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      #     # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
